<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.0.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>io.socialgamification</groupId>
	<artifactId>engine-service</artifactId>
	<version>1.0.0-RELEASE</version>
	<packaging>war</packaging>

	<properties>
		<!-- General -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		
		<!-- Others -->
		<eits-java-common.version>4.0.0-RELEASE</eits-java-common.version>
		<dwr.version>3.0.2-RELEASE</dwr.version>
		<apache.common.io.version>2.1</apache.common.io.version>
		<apache.common.fileupload.version>1.3.1</apache.common.fileupload.version>
		<fcmjava.version>2.5</fcmjava.version>
		
		<!-- Web -->
		<node.version>v8.9.3</node.version>
		<npm.version>5.6.0</npm.version>
		<node.path>${user.home}/.node</node.path>
		<typescript.path>src/main/ts</typescript.path>
	</properties>

	<!-- Repositories -->
	<repositories>
		<repository>
			<id>eits-repository-release</id>
			<url>http://maven.eits.com.br/content/repositories/releases</url>
		</repository>
		<repository>
			<id>eits-repository-snapshot</id>
			<url>http://maven.eits.com.br/content/repositories/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>

		<repository>
			<id>spring-snapshots</id>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<pluginRepositories>
		<pluginRepository>
			<id>spring-snapshots</id>
			<url>https://repo.spring.io/snapshot</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-milestones</id>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>

	<!-- Build -->
	<build>
		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<filtering>true</filtering>
				<directory>src/test/resources</directory>
			</testResource>
		</testResources>
		
		<plugins>
			<!-- Resource Filtering -->
			<plugin>
	        		<groupId>org.apache.maven.plugins</groupId>
	        		<artifactId>maven-resources-plugin</artifactId>
	        		<configuration>
          			<nonFilteredFileExtensions>
            			<nonFilteredFileExtension>ico</nonFilteredFileExtension>
            			<nonFilteredFileExtension>pdf</nonFilteredFileExtension>
            			<nonFilteredFileExtension>jasper</nonFilteredFileExtension>
            			<nonFilteredFileExtension>woff2</nonFilteredFileExtension>
            			<nonFilteredFileExtension>woff</nonFilteredFileExtension>
            			<nonFilteredFileExtension>ttf</nonFilteredFileExtension>
            			<nonFilteredFileExtension>eot</nonFilteredFileExtension>
          			</nonFilteredFileExtensions>
        			</configuration>
      		</plugin>
      		
      		<!-- Spring Boot -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
        				<executable>true</executable>
    				</configuration>
			</plugin>
			
			<!-- Unit Tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>**/*IntegrationTest*.java</exclude>
					</excludes>
				</configuration>
			</plugin>
			<!-- Integration Tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*IntegrationTests.java</include>
					</includes>
				</configuration>
			</plugin>

			<!-- Google App Engine -->
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>appengine-maven-plugin</artifactId>
				<configuration>
					<services>
						<!-- Default service -->
						<service>target/engine-service-${project.version}</service>
					</services>
				</configuration>
			</plugin>

			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
			
			<!-- Angular build -->
        		<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<version>1.6</version>
				<configuration>
					<nodeVersion>${node.version}</nodeVersion>
					<npmVersion>${npm.version}</npmVersion>
					<workingDirectory>${typescript.path}</workingDirectory>
					<installDirectory>${node.path}</installDirectory>
				</configuration>
				<executions>
					<execution>
						<id>install node and npm</id>
						<phase>initialize</phase>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
					</execution>
					<execution>
						<id>npm install</id>
						<phase>initialize</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>npm run-script mavenbuild</id>
						<phase>compile</phase>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>run-script mavenbuild</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
		
	</build>

	<dependencies>
		<!-- eits -->
		<dependency>
			<groupId>br.com.eits</groupId>
			<artifactId>eits-java-common</artifactId>
			<version>${eits-java-common.version}</version>
		</dependency>
		
		<!-- Spring Boot -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-tomcat</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		
		<!-- Database -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
		  <groupId>com.google.cloud.sql</groupId>
		  <artifactId>postgres-socket-factory</artifactId>
		  <version>1.0.5</version>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		
		<!-- Hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-java8</artifactId>
		</dependency>
		<dependency>
    			<groupId>org.hibernate</groupId>
    			<artifactId>hibernate-ehcache</artifactId>
		</dependency>
		
		<!-- Thymeleaf -->
		<dependency>
            <groupId>org.thymeleaf.extras</groupId>
            <artifactId>thymeleaf-extras-springsecurity4</artifactId>
        </dependency>
		
		 <!-- Firebase Cloud Messaging -->
  		<dependency>
		  	<groupId>de.bytefish.fcmjava</groupId>
		  	<artifactId>fcmjava-core</artifactId>
		  	<version>${fcmjava.version}</version>
		</dependency>
		<dependency>
		  	<groupId>de.bytefish.fcmjava</groupId>
		  	<artifactId>fcmjava-client</artifactId>
		  	<version>${fcmjava.version}</version>
		</dependency>
		
		<!-- Apache Commons -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${apache.common.io.version}</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${apache.common.fileupload.version}</version>
		</dependency>

		<!-- Jackson -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jdk8</artifactId>
		</dependency>

		<!-- Lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Jetty provided -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Exclude any jul-to-slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- DWR -->
		<dependency>
    			<groupId>org.directwebremoting</groupId>
    			<artifactId>dwr</artifactId>
    			<version>${dwr.version}</version>
  		</dependency>
  		
		<!-- Test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

</project>
